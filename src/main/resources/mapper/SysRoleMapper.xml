<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.garlic.mapper.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.garlic.domain.SysRole">
    <id column="ROLEID" jdbcType="VARCHAR" property="roleid" />
    <result column="PARENTROLEID" jdbcType="VARCHAR" property="parentroleid" />
    <result column="ROLENAME" jdbcType="VARCHAR" property="rolename" />
    <result column="ROLETYPE" jdbcType="CHAR" property="roletype" />
    <result column="ORGNO" jdbcType="VARCHAR" property="orgno" />
    <result column="AUTHLEVEL" jdbcType="DECIMAL" property="authlevel" />
    <result column="CHECKLEVEL" jdbcType="DECIMAL" property="checklevel" />
    <result column="DESCRIPT" jdbcType="VARCHAR" property="descript" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ROLEID, PARENTROLEID, ROLENAME, ROLETYPE, ORGNO, AUTHLEVEL, CHECKLEVEL, DESCRIPT
  </sql>
  <select id="selectByExample" parameterType="com.garlic.domain.SysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from SYS_ROLE
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SYS_ROLE
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.garlic.domain.SysRoleExample">
    delete from SYS_ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.garlic.domain.SysRole">
    insert into SYS_ROLE (ROLEID, PARENTROLEID, ROLENAME, 
      ROLETYPE, ORGNO, AUTHLEVEL, 
      CHECKLEVEL, DESCRIPT)
    values (#{roleid,jdbcType=VARCHAR}, #{parentroleid,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, 
      #{roletype,jdbcType=CHAR}, #{orgno,jdbcType=VARCHAR}, #{authlevel,jdbcType=DECIMAL}, 
      #{checklevel,jdbcType=DECIMAL}, #{descript,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.garlic.domain.SysRole">
    insert into SYS_ROLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        ROLEID,
      </if>
      <if test="parentroleid != null">
        PARENTROLEID,
      </if>
      <if test="rolename != null">
        ROLENAME,
      </if>
      <if test="roletype != null">
        ROLETYPE,
      </if>
      <if test="orgno != null">
        ORGNO,
      </if>
      <if test="authlevel != null">
        AUTHLEVEL,
      </if>
      <if test="checklevel != null">
        CHECKLEVEL,
      </if>
      <if test="descript != null">
        DESCRIPT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        #{roleid,jdbcType=VARCHAR},
      </if>
      <if test="parentroleid != null">
        #{parentroleid,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roletype != null">
        #{roletype,jdbcType=CHAR},
      </if>
      <if test="orgno != null">
        #{orgno,jdbcType=VARCHAR},
      </if>
      <if test="authlevel != null">
        #{authlevel,jdbcType=DECIMAL},
      </if>
      <if test="checklevel != null">
        #{checklevel,jdbcType=DECIMAL},
      </if>
      <if test="descript != null">
        #{descript,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.garlic.domain.SysRoleExample" resultType="java.lang.Long">
    select count(*) from SYS_ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SYS_ROLE
    <set>
      <if test="record.roleid != null">
        ROLEID = #{record.roleid,jdbcType=VARCHAR},
      </if>
      <if test="record.parentroleid != null">
        PARENTROLEID = #{record.parentroleid,jdbcType=VARCHAR},
      </if>
      <if test="record.rolename != null">
        ROLENAME = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.roletype != null">
        ROLETYPE = #{record.roletype,jdbcType=CHAR},
      </if>
      <if test="record.orgno != null">
        ORGNO = #{record.orgno,jdbcType=VARCHAR},
      </if>
      <if test="record.authlevel != null">
        AUTHLEVEL = #{record.authlevel,jdbcType=DECIMAL},
      </if>
      <if test="record.checklevel != null">
        CHECKLEVEL = #{record.checklevel,jdbcType=DECIMAL},
      </if>
      <if test="record.descript != null">
        DESCRIPT = #{record.descript,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SYS_ROLE
    set ROLEID = #{record.roleid,jdbcType=VARCHAR},
      PARENTROLEID = #{record.parentroleid,jdbcType=VARCHAR},
      ROLENAME = #{record.rolename,jdbcType=VARCHAR},
      ROLETYPE = #{record.roletype,jdbcType=CHAR},
      ORGNO = #{record.orgno,jdbcType=VARCHAR},
      AUTHLEVEL = #{record.authlevel,jdbcType=DECIMAL},
      CHECKLEVEL = #{record.checklevel,jdbcType=DECIMAL},
      DESCRIPT = #{record.descript,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.garlic.domain.SysRole">
    update SYS_ROLE
    <set>
      <if test="parentroleid != null">
        PARENTROLEID = #{parentroleid,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null">
        ROLENAME = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roletype != null">
        ROLETYPE = #{roletype,jdbcType=CHAR},
      </if>
      <if test="orgno != null">
        ORGNO = #{orgno,jdbcType=VARCHAR},
      </if>
      <if test="authlevel != null">
        AUTHLEVEL = #{authlevel,jdbcType=DECIMAL},
      </if>
      <if test="checklevel != null">
        CHECKLEVEL = #{checklevel,jdbcType=DECIMAL},
      </if>
      <if test="descript != null">
        DESCRIPT = #{descript,jdbcType=VARCHAR},
      </if>
    </set>
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.garlic.domain.SysRole">
    update SYS_ROLE
    set PARENTROLEID = #{parentroleid,jdbcType=VARCHAR},
      ROLENAME = #{rolename,jdbcType=VARCHAR},
      ROLETYPE = #{roletype,jdbcType=CHAR},
      ORGNO = #{orgno,jdbcType=VARCHAR},
      AUTHLEVEL = #{authlevel,jdbcType=DECIMAL},
      CHECKLEVEL = #{checklevel,jdbcType=DECIMAL},
      DESCRIPT = #{descript,jdbcType=VARCHAR}
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </update>
</mapper>